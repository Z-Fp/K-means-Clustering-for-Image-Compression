# -*- coding: utf-8 -*-
"""K-means Clustering for Image Compression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SPEm3GhcBqF1uCkImQk2Vr1MCtDeOaGc
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

"""**K-means clustering**

Using K-means clustering for Image Compression
"""

img = plt.imread('image.jpeg')

plt.figure()
plt.imshow(img)
plt.axis('off')
plt.show()


X = np.reshape(img, (-1, 3))
print(X.shape)
print(len(np.unique(X, axis=0)))


kmeans = KMeans(10).fit(X)

Xnew = np.zeros_like(X)
for i in range(Xnew.shape[0]):
  Xnew[i] = kmeans.cluster_centers_[kmeans.labels_[i]]
img_new = Xnew.reshape((img.shape[0], img.shape[1], 3))


plt.figure()
plt.imshow(img_new)
plt.show()

"""**Compression Function**"""

def compress(filename, k):
  img = plt.imread(filename)
  X = img.reshape((-1, 3))
  km = KMeans(k).fit(X)
  Xnew = np.zeros_like(X)
  for i in range(Xnew.shape[0]):
    Xnew[i] = km.cluster_centers_[km.labels_[i]]
  img_new = Xnew.reshape(img.shape)
  return img_new

img1 = compress('image.jpeg', 20)
plt.figure()
plt.imshow(img1)
plt.show()

"""**Comparing different K-means**"""

def compare(filename, k_list):
  img = plt.imread(filename)
  plt.figure(figsize=(12, 12))
  plt.subplot(221)
  plt.imshow(img)
  plt.title('Original')
  plt.subplot(222)
  img1 = compress(filename, k_list[0])
  print('First compression done...')
  plt.imshow(img1)
  plt.axis('off')
  plt.title(f'K = {k_list[0]}')
  plt.subplot(223)
  img2 = compress(filename, k_list[1])
  print('Second compression done...')
  plt.imshow(img2)
  plt.axis('off')
  plt.title(f'K = {k_list[1]}')
  plt.subplot(224)
  img3 = compress(filename, k_list[2])
  print('Third compression done...')
  plt.imshow(img3)
  plt.axis('off')
  plt.title(f'K = {k_list[2]}')
  plt.show()

compare('image.jpeg', [2, 10, 60])